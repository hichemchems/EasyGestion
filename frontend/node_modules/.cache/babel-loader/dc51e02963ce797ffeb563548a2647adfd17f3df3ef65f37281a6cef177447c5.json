{"ast":null,"code":"import{Navigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,allowedRoles=[]}=_ref;const{user,loading}=useAuth();if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}if(allowedRoles.length>0&&!allowedRoles.includes(user.role)){return/*#__PURE__*/_jsx(Navigate,{to:\"/unauthorized\",replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["Navigate","useAuth","jsx","_jsx","ProtectedRoute","_ref","children","allowedRoles","user","loading","to","replace","length","includes","role"],"sources":["/Users/master1/cloneGithub/EasyGestion/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst ProtectedRoute = ({ children, allowedRoles = [] }) => {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  if (allowedRoles.length > 0 && !allowedRoles.includes(user.role)) {\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAqC,IAApC,CAAEC,QAAQ,CAAEC,YAAY,CAAG,EAAG,CAAC,CAAAF,IAAA,CACrD,KAAM,CAAEG,IAAI,CAAEC,OAAQ,CAAC,CAAGR,OAAO,CAAC,CAAC,CAEnC,GAAIQ,OAAO,CAAE,CACX,mBAAON,IAAA,QAAAG,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAEA,GAAI,CAACE,IAAI,CAAE,CACT,mBAAOL,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,GAAIJ,YAAY,CAACK,MAAM,CAAG,CAAC,EAAI,CAACL,YAAY,CAACM,QAAQ,CAACL,IAAI,CAACM,IAAI,CAAC,CAAE,CAChE,mBAAOX,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,eAAe,CAACC,OAAO,MAAE,CAAC,CAChD,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}